#include<stdio.h>
#include<stdlib.h>

void menu();

int main()
{
	menu();
	return 0;
}

void menu()
{
	int ch;
	printf("\nEnter ur choice : ");
	X:
		printf("\n1.Banker's Algorithm (to check the state of a system)\n2.bowOut\n");
		scanf("%d",&ch);
		switch(ch)
			{
				case 1:
					start();
					break;
				case 2:
					exit(0);
				default:
					printf("\n\n\t\tInvalid choice\n\t\tEnter choice as mentioned\n\n");
					goto X;
			};
}

void start()
{
	int Allocation[10][10];
	int Maximum[10][10];
	int Need[10][10];
	int Work[1][10];
	int n,m,p;
	char choice;
	printf("\n\t\t\tBANKER'S ALGORITHM\n");
	input(Allocation,Need,Maximum,Work,&n,&m);
	if(queue(Allocation,Need,Work,n,m)!=0)
	{
		Y:
		printf("\n\tProgress with requesting additional resources... (y=Yes|n=No)");
		scanf("%s",&choice);
		if(choice == 'y'||choice == 'Y')
		{
			printf("\n\tEnter process no. : ");
			scanf("%d",&p);
			rereq(Allocation,Need,Work,p,m);
			if(queue(Allocation,Need,Work,n,m) == 0 )
			{
				exit(0);
			}
			goto Y;	
		}
		else
			menu();
	}
	else
		exit(0);
}

int check(int A[][10],int N[][10],int AV[1][10],int n,int m,int a[])
{
	int i,j,k,x=0;
	int Finish[10],W[1][10];
	int pflag=0,flag=0;
	for(i=0;i<n;i++)
		Finish[i]=0;
	for(i=0;i<m;i++)
		W[0][i]=AV[0][i];
	for(k=0;k<n;k++)
	{
		for(i=0;i<n;i++)
		{
			if(Finish[i] == 0)
			{
				flag=0;
				for(j=0;j<m;j++)
				{
					if(N[i][j] > W[0][j])
						flag=1;
				}
				if(flag == 0 && Finish[i] == 0)
				{
					for(j=0;j<m;j++)
						W[0][j] = W[0][j] + A[i][j];
					Finish[i]=1;
					pflag++;
					a[x++]=i;
				}
			}
		}
		if(pflag == n)
			return 1;
	}
	return 0;
}
